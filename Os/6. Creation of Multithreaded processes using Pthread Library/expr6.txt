//program to create file with null attributes
#include<stdio.h>
#include<unistd.h>
#include<pthread.h>
char *a;
void *func()
{
    printf("In thread func\n");
    pthread_exit("Exit thread func\n");
}
int main()
{
    pthread_t t;
    void *a;
    printf("in main thread");
    pthread_create(&t,NULL,func,NULL);
    pthread_join(t,&a);
    printf("%s\n",a);
}



// program to pass argument in thread func
#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>

void *func()
{
    int *p=(int *)i;
    printf("In thread func\n");
    printf("%d\n",*p);
    return NULL;
}
int main()
{
    pthread_t t1;
    int i = 10;
    pthread_create(&t1,NULL,func,(void *)&i);
    pthread_join(t1,NULL);
    exit(0);
}
//program to create two threads and pass messgae from main
#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>
void *func(void *i)
{
    char *msg = (char *)i;
    printf("In thread func\n%s\n",msg);
    return NULL;
}
int main()
{
    pthread_t t1, t2;
    int r1,r2;
    char *msg1="first thread";
    char *msg2="second thread";
    r1=pthread_create(&t1,NULL,func,(void *)msg1);
    r2=pthread_create(&t2,NULL,func,(void *)msg2);
    printf("main func after pthread_create\n");
    pthread_join(t1,NULL);
    pthread_join(t2,NULL);
    printf("first thread r1=%d\n",r1);
    printf("second thread r2=%d\n",r2);
    return 0;
}


// program to create two threads. First thread prints factorial of number and second thread prints whether number is even orr odd.
#include<stdio.h>
#include<pthread.h>
void *fact(void *temp1)
{
    int i = (int *)temp1;
    int fact=1;
    for(int a = 1;a<=i;a++)
    {
        fact = fact * a;
    }
    printf("fact is %d: \n",fact);
}
void *even_odd(void *temp2)
{
    int i = (int *)temp2;
    if(i%2==0)
    {
        printf("even\n");
    }
    else printf("odd\n");
}
int main()
{
    pthread_t t1,t2;
    int num = 4;
    pthread_create(&t1,NULL,fact,(void *)&num);
    pthread_create(&t2,NULL,even_odd,(void *)$num);
    pthread_join(t1,NULL);
    pthread_join(t2,NULL);
    return 0;
}

// pass array in a thread
#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>
void *arrFunc(void *arr)
{
    int *p = (int *)arg;
    for(int i = 0; i<10;i++)
    {
        printf("%d ",p[i]);
    }
    return NULL;
}
int main()
{
    int arr[10] = {10,20,30,40,50,60,70,80,90,100};
    pthread_t t1;
    pthread_create(&t1,NULL,arrFunc,(void *)arr);
    pthread_join(t1,NULL);
    return 0;
}

// pass structure to array
#include<stdlib.h>
#include<stdio.h>
#include<pthread.h>

struct thread_args
{
    int arg1;
    int arg2;
    char *arg3;
};
void *myFunc(void *temp)
{
    struct thread_args *myargs = (struct thread_args *)temp;
    printf("arg1= %d\n",myargs->arg1);
    printf("arg2= %d\n",myargs->arg2);
    printf("arg3= %s\n",myargs->arg3);

    return NULL;
}

int main()
{
    
    pthread_t t1;
    struct thread_args args;
    args.arg1 = 10; args.arg2 = 11; args.arg3 = "10+11";
    pthread_create(&t1,NULL,myFunc,&args);
    pthread_join(t1,NULL);
    return 0;
}


// wap using pthread to find length of string, where string is passed to thread function
#include<stdio.h>
#include<pthread.h>
#include<string.h>
 
void *myFun(void *i)
{
    char *str = (void *)i;
    int strLen = strlen(str);
    printf("The length of string is: %d\n",strLen);
}

int main()
{
    char *str = "hello world";//11
    pthread_t t1;
    pthread_create(&t1,NULL,myFun,(void *)str);
    pthread_join(t1,NULL);
    return 0;
}

// wap to concatentae two strings
#include<stdio.h>
#include<pthread.h>
#include<string.h>

//max_strings, max length of strings
char strings[10][100];
char result[1000]; 

void myCon()
{
    
    int i,j,k = 0;
    for(i = 0; i<10;i++)
    {
        for(j=0;strings[i][j]!='\0);j++
        {
            result[k++] = strings[i][j]; //
        }
    }
    result[k] ='\0'; //
    pthread_exit(NULL);
}
int main()
{
    printf("Enter number of strings you wish to enter: ");
    int num; scanf("%d",&num);

    for(int i = 0;i<num;i++)
    {
        scanf("%s",strings[i]);
    }

    void *ret;
    pthread_t t1;
    pthread_create(&t1,NULL,myCon,NULL);
    pthread_join(t1,&ret);
    printf("Concatenated stribg is: %s",result); //
    return 0;
}